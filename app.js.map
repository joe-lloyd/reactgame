{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/app/index.js","webpack:///./~/react-game-kit/lib/index.js","webpack:///./~/react-game-kit/lib/utils/audio-player.js","webpack:///./~/react-game-kit/lib/components/body.js","webpack:///./~/react-game-kit/~/matter-js/src/module/main.js","webpack:///./~/react-game-kit/~/matter-js/src/body/Body.js","webpack:///./~/react-game-kit/~/matter-js/src/geometry/Vertices.js","webpack:///./~/react-game-kit/~/matter-js/src/geometry/Vector.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Common.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Sleeping.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Events.js","webpack:///./~/react-game-kit/~/matter-js/src/render/Render.js","webpack:///./~/react-game-kit/~/matter-js/src/body/Composite.js","webpack:///./~/react-game-kit/~/matter-js/src/geometry/Bounds.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Grid.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Pair.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Contact.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Detector.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/SAT.js","webpack:///./~/react-game-kit/~/matter-js/src/geometry/Axes.js","webpack:///./~/react-game-kit/~/matter-js/src/body/World.js","webpack:///./~/react-game-kit/~/matter-js/src/constraint/Constraint.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Pairs.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Query.js","webpack:///./~/react-game-kit/~/matter-js/src/factory/Bodies.js","webpack:///./~/react-game-kit/~/matter-js/src/collision/Resolver.js","webpack:///./~/react-game-kit/~/matter-js/src/constraint/MouseConstraint.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Mouse.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Engine.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Metrics.js","webpack:///./~/react-game-kit/~/matter-js/src/core/Runner.js","webpack:///./~/react-game-kit/~/matter-js/src/factory/Composites.js","webpack:///./~/react-game-kit/~/matter-js/src/geometry/Svg.js","webpack:///./~/react-game-kit/~/matter-js/src/render/RenderPixi.js","webpack:///./~/react-game-kit/lib/components/loop.js","webpack:///./~/react-game-kit/lib/utils/game-loop.js","webpack:///./~/react-game-kit/lib/utils/key-listener.js","webpack:///./~/react-game-kit/lib/components/sprite.js","webpack:///./~/react-game-kit/lib/components/stage.js","webpack:///./~/react-game-kit/lib/components/tile-map.js","webpack:///./~/react-game-kit/lib/components/world.js","webpack:///./src/app/game/index.js"],"names":["document","addEventListener","querySelector","render","App","props","state","facing","keyListener","subscribe","LEFT","RIGHT","UP","SPACE","unsubscribe","Object","defineProperty","exports","value","World","TileMap","Stage","Sprite","KeyListener","Loop","Body","AudioPlayer","undefined","_audioPlayer","require","_audioPlayer2","_interopRequireDefault","_body","_body2","_loop","_loop2","_keyListener","_keyListener2","_sprite","_sprite2","_stage","_stage2","_tileMap","_tileMap2","_world","_world2","obj","__esModule","default","__REACT_HOT_LOADER__","_classCallCheck","instance","Constructor","TypeError","url","callback","_this","play","options","volume","offset","loop","source","context","createBufferSource","gainNode","createGain","gain","connect","destination","buffer","start","currentTime","stop","bind","loadBuffer","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","console","error","onerror","onError","send","window","AudioContext","webkitAudioContext","register","_createClass","defineProperties","target","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_class","_temp","_react","_matterJs","_matterJs2","_toConsumableArray","arr","Array","isArray","arr2","from","_objectWithoutProperties","keys","indexOf","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_Component","getPrototypeOf","args","children","shape","body","Bodies","apply","concat","addBody","engine","world","componentWillReceiveProps","nextProps","_this2","forEach","option","set","componentWillUnmount","remove","getChildContext","Component","propTypes","angle","PropTypes","number","area","string","array","axes","x","y","bounds","min","max","any","collisionFilter","category","group","mask","density","force","friction","frictionAir","frictionStatic","id","inertia","inverseInertia","inverseMass","isSensor","bool","isSleeping","isStatic","label","mass","position","restitution","sleepThreshold","slop","slope","timeScale","torque","vertices","defaultProps","contextTypes","object","childContextTypes","Matter","module","version","Composite","Contact","Detector","Grid","Pairs","Pair","Query","Resolver","SAT","Constraint","MouseConstraint","Common","Engine","Events","Mouse","Runner","Sleeping","Metrics","Composites","Axes","Bounds","Svg","Vector","Vertices","Render","RenderPixi","add","addComposite","addConstraint","clear","run","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","nextId","type","parts","fromPath","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","motion","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","extend","_initProperties","nextGroup","isNonColliding","nextCategory","positionPrev","clone","anglePrev","parent","rotate","update","defaultFillStyle","choose","defaultStrokeStyle","shadeColor","fillStyle","strokeStyle","settings","property","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","Infinity","fromVertices","centre","translate","autoHull","slice","push","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","rotation","scale","scaleX","scaleY","point","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","properties","mult","div","points","vertex","index","isInternal","path","pathPattern","replace","match","parseFloat","cross","temp","j","mean","average","signed","numerator","denominator","v","n","dot","vector","scalar","cos","sin","vertice","dx","dy","contains","nextVertice","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","normalise","nextNormal","diagonalRadius","sqrt","radiusVector","midNormal","scaledVertex","precision","clamp","alpha","acos","theta","sort","vertexA","vertexB","isConvex","flag","k","z","upper","lower","cross3","pop","magnitudeSquared","output","vectorA","vectorB","vectorC","perp","negate","neg","atan2","_nextId","_seed","deep","argsStart","deepClone","arguments","prop","values","color","percent","colorInteger","parseInt","amount","round","R","B","G","toString","shuffle","floor","random","choices","isElement","HTMLElement","e","nodeType","style","ownerDocument","sign","now","performance","webkitNow","msNow","oNow","mozNow","Date","_seededRandom","colorToNumber","colorString","charAt","log","message","warn","haystack","needle","_motionWakeThreshold","_motionSleepThreshold","_minBias","bodies","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","wasSleeping","trigger","on","eventNames","names","split","name","events","off","join","callbacks","newCallbacks","event","eventClone","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","controller","element","canvas","mouse","frameRequestId","width","height","pixelRatio","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","getContext","textures","setPixelRatio","appendChild","time","_getPixelRatio","setAttribute","allBodies","allConstraints","constraints","timestamp","timing","currentBackground","_applyBackground","globalCompositeOperation","fillRect","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","overlaps","constraint","pointAWorld","pointA","pointBWorld","pointB","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","list","collisions","vertexNumbers","mousePosition","broadphase","grid","debug","setTransform","c","metrics","space","debugTimestamp","text","fps","extended","toFixed","buckets","broadEff","midEff","narrowEff","debugString","font","fillText","beginPath","moveTo","lineTo","stroke","bodyShadows","arc","PI","closePath","distanceX","distanceY","distance","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","fill","globalAlpha","texture","_getTexture","drawImage","rect","axis","corrected","activeContacts","contact","normalPosX","normalPosY","supports","normal","penetration","bucketKeys","bucketId","region","bucketWidth","bucketHeight","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","test","backgroundSize","isModified","composites","setModified","composite","updateParents","updateChildren","childComposite","objects","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","keepStatic","filter","allComposites","get","move","rebase","recursive","boundsA","boundsB","shift","deltaX","deltaY","detector","pairsList","forceUpdate","col","row","bucket","gridChanged","broadphaseTests","newRegion","_getRegion","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairId","pairKeys","parentA","parentB","contacts","separation","timeCreated","timeUpdated","collided","support","contactId","depth","setActive","normalImpulse","tangentImpulse","broadphasePairs","pairsTable","table","canCollide","midphaseTests","partA","partB","previousCollision","collides","narrowphaseTests","reused","narrowReuseCount","narrowDetections","filterA","filterB","overlapAB","overlapBA","minOverlap","prevCol","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","overlap","tangent","verticesB","_findSupports","verticesA","projectionA","projectionB","result","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","prevIndex","nextIndex","gradient","xx","gravity","_minLength","_minDifference","initialPointA","initialPointB","stiffness","angularStiffness","angleA","angleB","solveAll","solve","currentLength","difference","velocityPointA","velocityPointB","offsetA","offsetB","oAn","oBn","bodyADenom","bodyBDenom","relativeVelocity","normalVelocity","postSolveAll","impulse","_pairMaxIdleLife","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","trapezoid","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","yy","vertexSets","flagInternal","removeCollinear","minimumArea","decomp","concave","Polygon","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","db","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","bodyBtoA","contactShare","contactCount","tempA","tempB","tempC","tempD","postSolvePosition","preSolveVelocity","contactVertex","solveVelocity","timeScaleSquared","tempE","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","mouseConstraint","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","absolute","mousedownPosition","mouseupPosition","wheelDelta","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","clientHeight","positionIterations","velocityIterations","constraintIterations","renderDefaults","reset","_bodiesApplyGravity","_bodiesUpdate","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","narrowReuse","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","isFixed","runner","deltaMin","deltaMax","tick","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","chain","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","end","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","removeChild","bgSprite","addChildAt","setBackground","isColor","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","_extends","assign","_react2","_gameLoop","_gameLoop2","componentDidMount","defaultStyles","styles","GameLoop","subscribers","loopID","DOWN","down","keyCode","up","isDown","removeEventListener","tickCount","finished","currentStep","onPlayStateChanged","animate","setState","repeat","ticksPerFrame","steps","lastStep","nextStep","getImageStyles","_props","tileWidth","tileHeight","transform","getWrapperStyles","overflow","transformOrigin","imageRendering","func","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","err","setDimensions","dimensions","offsetWidth","offsetHeight","getScale","_state$dimensions","vwidth","vheight","targetWidth","targetHeight","targetScale","getInnerStyles","ref","shouldComponentUpdate","nextState","nextContext","generateMap","layers","mappedLayers","l","layer","r","gridIndex","getImageWrapperStyles","renderTile","getTileData","tileSize","imageIndex","display","getLayerStyles","_this3","map","tile","currTime","lastTime","onInit","onUpdate","onCollision","Game","checkKeys"],"mappings":"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","file":"app.js","sourcesContent":["import 'babel-polyfill';\r\nimport App from './app';\r\nimport ReactDOM from 'react-dom'\r\nimport React, { Component } from 'react';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\",() => {\r\n\r\n\tif (document.querySelector('.game')) {\r\n\t\tReactDOM.render(\r\n\t\t\t<App />,\r\n\t\t\tdocument.querySelector('.game')\r\n\t\t)\r\n\t}\r\n\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Loop, Stage, World, Body, Sprite, KeyListener } from 'react-game-kit';\r\nimport React, { Component } from 'react';\r\nimport Game from './game';\r\n\r\n/**\r\n * @class App\r\n *\r\n * @description\r\n * This is the main entry to the react app, sets up event\r\n * listeners and other things that are needed for the\r\n * rest of the game\r\n *\r\n */\r\nexport default class App extends Component {\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param props\r\n\t */\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tfacing: 0\r\n\t\t};\r\n\r\n\t\tthis.keyListener = new KeyListener();\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Lifecycle Method\r\n\t * Sets up event listeners when the component is mounted to the DOM\r\n\t *\r\n\t */\r\n\tcomponentDidMount () {\r\n\t\tthis.keyListener.subscribe([\r\n\t\t\tthis.keyListener.LEFT,\r\n\t\t\tthis.keyListener.RIGHT,\r\n\t\t\tthis.keyListener.UP,\r\n\t\t\tthis.keyListener.SPACE\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Lifecycle Method\r\n\t * removes event listeners when the component is gone\r\n\t *\r\n\t */\r\n\tcomponentWillUnmount() {\r\n\t\tthis.keyListener.unsubscribe();\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Render Method\r\n\t *\r\n\t * @returns {XML}\r\n\t */\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Loop>\r\n\t\t\t\t<Stage>\r\n\t\t\t\t\t<Game keys={this.keyListener} />\r\n\t\t\t\t</Stage>\r\n\t\t\t</Loop>\r\n\t\t);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.World = exports.TileMap = exports.Stage = exports.Sprite = exports.KeyListener = exports.Loop = exports.Body = exports.AudioPlayer = undefined;\n\nvar _audioPlayer = require('./utils/audio-player.js');\n\nvar _audioPlayer2 = _interopRequireDefault(_audioPlayer);\n\nvar _body = require('./components/body.js');\n\nvar _body2 = _interopRequireDefault(_body);\n\nvar _loop = require('./components/loop.js');\n\nvar _loop2 = _interopRequireDefault(_loop);\n\nvar _keyListener = require('./utils/key-listener.js');\n\nvar _keyListener2 = _interopRequireDefault(_keyListener);\n\nvar _sprite = require('./components/sprite.js');\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _stage = require('./components/stage.js');\n\nvar _stage2 = _interopRequireDefault(_stage);\n\nvar _tileMap = require('./components/tile-map.js');\n\nvar _tileMap2 = _interopRequireDefault(_tileMap);\n\nvar _world = require('./components/world.js');\n\nvar _world2 = _interopRequireDefault(_world);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.AudioPlayer = _audioPlayer2.default;\nexports.Body = _body2.default;\nexports.Loop = _loop2.default;\nexports.KeyListener = _keyListener2.default;\nexports.Sprite = _sprite2.default;\nexports.Stage = _stage2.default;\nexports.TileMap = _tileMap2.default;\nexports.World = _world2.default;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-console */\nvar AudioPlayer = function AudioPlayer(url, callback) {\n  var _this = this;\n\n  _classCallCheck(this, AudioPlayer);\n\n  this.play = function (options) {\n    var volume = options && options.volume;\n    var offset = options && options.offset;\n    var loop = options && options.loop;\n\n    var source = _this.context.createBufferSource();\n    var gainNode = _this.context.createGain();\n    gainNode.gain.value = volume || 0.5;\n\n    gainNode.connect(_this.context.destination);\n    source.connect(gainNode);\n\n    source.buffer = _this.buffer;\n    source.start(offset ? _this.context.currentTime + offset : 0);\n    source.loop = loop || false;\n    return source.stop.bind(source);\n  };\n\n  this.loadBuffer = function () {\n    var request = new XMLHttpRequest();\n    request.open('GET', _this.url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      _this.context.decodeAudioData(request.response, function (buffer) {\n        if (!buffer) {\n          console.error('error decoding file data: ' + _this.url);\n          return;\n        }\n        _this.buffer = buffer;\n        _this.callback();\n      }, function (error) {\n        console.error('decodeAudioData error', error);\n      });\n    };\n\n    request.onerror = function onError() {\n      console.error('BufferLoader: XHR error');\n    };\n\n    request.send();\n  };\n\n  this.url = url || null;\n  this.callback = callback || function () {};\n\n  this.buffer = null;\n\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  this.context = window.context || new AudioContext();\n\n  this.loadBuffer();\n};\n\nexports.default = AudioPlayer;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(AudioPlayer, 'AudioPlayer', 'src/utils/audio-player.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/utils/audio-player.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _matterJs = require('matter-js');\n\nvar _matterJs2 = _interopRequireDefault(_matterJs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Body = (_temp = _class = function (_Component) {\n  _inherits(Body, _Component);\n\n  function Body(props, context) {\n    _classCallCheck(this, Body);\n\n    var _this = _possibleConstructorReturn(this, (Body.__proto__ || Object.getPrototypeOf(Body)).call(this, props));\n\n    var args = props.args;\n    var children = props.children;\n    var shape = props.shape;\n\n    var options = _objectWithoutProperties(props, ['args', 'children', 'shape']);\n\n    _this.body = _matterJs.Bodies[shape].apply(_matterJs.Bodies, _toConsumableArray(args).concat([options]));\n    _matterJs.World.addBody(context.engine.world, _this.body);\n    return _this;\n  }\n\n  _createClass(Body, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var args = nextProps.args;\n      var children = nextProps.children;\n      var shape = nextProps.shape;\n\n      var options = _objectWithoutProperties(nextProps, ['args', 'children', 'shape']);\n\n      Object.keys(options).forEach(function (option) {\n        if (option in _this2.body && _this2.props[option] !== nextProps[option]) {\n          _matterJs2.default.Body.set(_this2.body, option, options[option]);\n        }\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      _matterJs.World.remove(this.context.engine.world, this.body);\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        body: this.body\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return Body;\n}(_react.Component), _class.propTypes = {\n  angle: _react.PropTypes.number,\n  area: _react.PropTypes.string,\n  args: _react.PropTypes.array,\n  axes: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number\n  }),\n  bounds: _react.PropTypes.shape({\n    min: _react.PropTypes.shape({\n      x: _react.PropTypes.number,\n      y: _react.PropTypes.number\n    }),\n    max: _react.PropTypes.shape({\n      x: _react.PropTypes.number,\n      y: _react.PropTypes.number\n    })\n  }),\n  children: _react.PropTypes.any,\n  collisionFilter: _react.PropTypes.shape({\n    category: _react.PropTypes.number,\n    group: _react.PropTypes.number,\n    mask: _react.PropTypes.number\n  }),\n  density: _react.PropTypes.number,\n  force: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number\n  }),\n  friction: _react.PropTypes.number,\n  frictionAir: _react.PropTypes.number,\n  frictionStatic: _react.PropTypes.number,\n  id: _react.PropTypes.number,\n  inertia: _react.PropTypes.number,\n  inverseInertia: _react.PropTypes.number,\n  inverseMass: _react.PropTypes.number,\n  isSensor: _react.PropTypes.bool,\n  isSleeping: _react.PropTypes.bool,\n  isStatic: _react.PropTypes.bool,\n  label: _react.PropTypes.string,\n  mass: _react.PropTypes.number,\n  position: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number\n  }),\n  restitution: _react.PropTypes.number,\n  shape: _react.PropTypes.string,\n  sleepThreshold: _react.PropTypes.number,\n  slop: _react.PropTypes.number,\n  slope: _react.PropTypes.number,\n  timeScale: _react.PropTypes.number,\n  torque: _react.PropTypes.number,\n  vertices: _react.PropTypes.array\n}, _class.defaultProps = {\n  args: [0, 0, 100, 100],\n  restitution: 0,\n  friction: 1,\n  frictionStatic: 0,\n  shape: 'rectangle'\n}, _class.contextTypes = {\n  engine: _react.PropTypes.object\n}, _class.childContextTypes = {\n  body: _react.PropTypes.object\n}, _temp);\nexports.default = Body;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Body, 'Body', 'src/components/body.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/body.js","var Matter = module.exports = {};\nMatter.version = 'master';\n\nMatter.Body = require('../body/Body');\nMatter.Composite = require('../body/Composite');\nMatter.World = require('../body/World');\n\nMatter.Contact = require('../collision/Contact');\nMatter.Detector = require('../collision/Detector');\nMatter.Grid = require('../collision/Grid');\nMatter.Pairs = require('../collision/Pairs');\nMatter.Pair = require('../collision/Pair');\nMatter.Query = require('../collision/Query');\nMatter.Resolver = require('../collision/Resolver');\nMatter.SAT = require('../collision/SAT');\n\nMatter.Constraint = require('../constraint/Constraint');\nMatter.MouseConstraint = require('../constraint/MouseConstraint');\n\nMatter.Common = require('../core/Common');\nMatter.Engine = require('../core/Engine');\nMatter.Events = require('../core/Events');\nMatter.Mouse = require('../core/Mouse');\nMatter.Runner = require('../core/Runner');\nMatter.Sleeping = require('../core/Sleeping');\n\n// @if DEBUG\nMatter.Metrics = require('../core/Metrics');\n// @endif\n\nMatter.Bodies = require('../factory/Bodies');\nMatter.Composites = require('../factory/Composites');\n\nMatter.Axes = require('../geometry/Axes');\nMatter.Bounds = require('../geometry/Bounds');\nMatter.Svg = require('../geometry/Svg');\nMatter.Vector = require('../geometry/Vector');\nMatter.Vertices = require('../geometry/Vertices');\n\nMatter.Render = require('../render/Render');\nMatter.RenderPixi = require('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/module/main.js","/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Sleeping = require('../core/Sleeping');\nvar Render = require('../render/Render');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\nvar Axes = require('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 1.5\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} options\n     */\n    var _initProperties = function(body, options) {\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#eeeeee' : Common.choose(['#556270', '#4ECDC4', '#C7F464', '#FF6B6B', '#C44D58'])),\n            defaultStrokeStyle = Common.shadeColor(defaultFillStyle, -20);\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     */\n    Body.rotate = function(body, rotation) {\n        Body.setAngle(body, body.angle + rotation);\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, \n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre, \n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 1.5\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/body/Body.js","/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i--) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/geometry/Vertices.js","/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @return {vector} A new vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        return {\n            x: vector.x * cos - vector.y * sin,\n            y: vector.x * sin + vector.y * cos\n        };\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [Vector.create(), Vector.create(), \n                    Vector.create(), Vector.create(), \n                    Vector.create(), Vector.create()];\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/geometry/Vector.js","/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        args = Array.prototype.slice.call(arguments, argsStart);\n\n        for (var i = 0; i < args.length; i++) {\n            var source = args[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Returns a hex colour string made by lightening or darkening color by percent.\n     * @method shadeColor\n     * @param {string} color\n     * @param {number} percent\n     * @return {string} A hex colour\n     */\n    Common.shadeColor = function(color, percent) {   \n        // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color\n        var colorInteger = parseInt(color.slice(1),16), \n            amount = Math.round(2.55 * percent), \n            R = (colorInteger >> 16) + amount, \n            B = (colorInteger >> 8 & 0x00FF) + amount, \n            G = (colorInteger & 0x0000FF) + amount;\n        return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R :255) * 0x10000 \n                + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 \n                + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n        try {\n            return obj instanceof HTMLElement;\n        }\n        catch(e){\n            return (typeof obj===\"object\") &&\n              (obj.nodeType===1) && (typeof obj.style === \"object\") &&\n              (typeof obj.ownerDocument ===\"object\");\n        }\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp (high-res if available).\n     * @method now\n     * @return {number} the current timestamp (high-res if available)\n     */\n    Common.now = function() {\n        // http://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript\n        // https://gist.github.com/davidwaterston/2982531\n\n        var performance = window.performance || {};\n\n        performance.now = (function() {\n            return performance.now    ||\n            performance.webkitNow     ||\n            performance.msNow         ||\n            performance.oNow          ||\n            performance.mozNow        ||\n            function() { return +(new Date()); };\n        })();\n              \n        return performance.now();\n    };\n\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * A wrapper for console.log, for providing errors and warnings.\n     * @method log\n     * @param {string} message\n     * @param {string} type\n     */\n    Common.log = function(message, type) {\n        if (!console || !console.log || !console.warn)\n            return;\n\n        switch (type) {\n\n        case 'warn':\n            console.warn('Matter.js:', message);\n            break;\n        case 'error':\n            console.log('Matter.js:', message);\n            break;\n\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    var _seededRandom = function() {\n        // https://gist.github.com/ngryman/3830489\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Common.js","/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = require('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Sleeping.js","/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = require('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Events.js","/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = require('../core/Common');\nvar Composite = require('../body/Composite');\nvar Bounds = require('../geometry/Bounds');\nvar Events = require('../core/Events');\nvar Grid = require('../collision/Grid');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n    \n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || { \n            min: { \n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / options.width,\n                boundsScaleY = boundsHeight / options.height;\n\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n        \n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            context.setTransform(options.pixelRatio, 0, 0, options.pixelRatio, 0, 0);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n            // @if DEBUG\n            if (metrics.extended) {\n                if (metrics.timing) {\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n                }\n\n                text += \"bodies: \" + bodies.length + space;\n\n                if (engine.broadphase.controller === Grid)\n                    text += \"buckets: \" + metrics.buckets + space;\n\n                text += \"\\n\";\n\n                text += \"collisions: \" + metrics.collisions + space;\n                text += \"pairs: \" + engine.pairs.list.length + space;\n                text += \"broad: \" + metrics.broadEff + space;\n                text += \"mid: \" + metrics.midEff + space;\n                text += \"narrow: \" + metrics.narrowEff + space;\n            }\n            // @endif            \n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB;\n\n            if (bodyA) {\n                c.beginPath();\n                c.moveTo(bodyA.position.x + constraint.pointA.x, bodyA.position.y + constraint.pointA.y);\n            } else {\n                c.beginPath();\n                c.moveTo(constraint.pointA.x, constraint.pointA.y);\n            }\n\n            if (bodyB) {\n                c.lineTo(bodyB.position.x + constraint.pointB.x, bodyB.position.y + constraint.pointB.y);\n            } else {\n                c.lineTo(constraint.pointB.x, constraint.pointB.y);\n            }\n\n            c.lineWidth = constraint.render.lineWidth;\n            c.strokeStyle = constraint.render.strokeStyle;\n            c.stroke();\n        }\n    };\n    \n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y); \n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale, \n                        texture.height * -sprite.yOffset * sprite.yScale, \n                        texture.width * sprite.xScale, \n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y); \n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n                        \n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n                        c.lineWidth = part.render.lineWidth;\n                        c.strokeStyle = part.render.strokeStyle;\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                    }\n\n                    c.stroke();\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n                \n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n            \n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2, \n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.8)';\n            c.globalCompositeOperation = 'overlay';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n            \n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n                \n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(',');\n            c.rect(0.5 + parseInt(region[0], 10) * grid.bucketWidth, \n                    0.5 + parseInt(region[1], 10) * grid.bucketHeight, \n                    grid.bucketWidth, \n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n            \n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3), \n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y), \n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region. \n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/render/Render.js","/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = require('../core/Events');\nvar Common = require('../core/Common');\nvar Body = require('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite'\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.log('Composite.add: skipped adding a compound body part (you must add its parent instead)', 'warn');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/body/Composite.js","/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/geometry/Bounds.js","/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = require('./Pair');\nvar Detector = require('./Detector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        metrics.broadphaseTests = 0;\n        // @endif\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                // @if DEBUG\n                metrics.broadphaseTests += 1;\n                // @endif\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return column + ',' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Grid.js","/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = require('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return bodyA.id + '_' + bodyB.id;\n        } else {\n            return bodyB.id + '_' + bodyA.id;\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Pair.js","/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Contact.js","/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = require('./SAT');\nvar Pair = require('./Pair');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        // @endif\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // @if DEBUG\n            metrics.midphaseTests += 1;\n            // @endif\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            // @if DEBUG\n                            metrics.narrowphaseTests += 1;\n                            if (collision.reused)\n                                metrics.narrowReuseCount += 1;\n                            // @endif\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                                // @if DEBUG\n                                metrics.narrowDetections += 1;\n                                // @endif\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Detector.js","/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            prevCol = previousCollision,\n            canReusePrevCol = false;\n\n        if (prevCol) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = prevCol && prevCol.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = prevCol;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (prevCol && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[prevCol.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.normal = minOverlap.axis;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(collision.normal, Vector.sub(bodyB.position, bodyA.position)) > 0) \n            collision.normal = Vector.neg(collision.normal);\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = { \n            x: collision.normal.x * collision.depth, \n            y: collision.normal.y * collision.depth \n        };\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = collision.supports || [];\n        supports.length = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/SAT.js","/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/geometry/Axes.js","/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = require('./Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/body/World.js","/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n// TODO: fix instability issues with torque\n// TODO: linked constraints\n// TODO: breakable constraints\n// TODO: collision constraints\n// TODO: allow constrained bodies to sleep\n// TODO: handle 0 length constraints properly\n// TODO: impulse caching and warming\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Sleeping = require('../core/Sleeping');\nvar Bounds = require('../geometry/Bounds');\nvar Axes = require('../geometry/Axes');\nvar Common = require('../core/Common');\n\n(function() {\n\n    var _minLength = 0.000001,\n        _minDifference = 0.001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = constraint.length || length || _minLength;\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#666'\n        };\n        \n        constraint.render = Common.extend(render, constraint.render);\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || 1;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n\n        return constraint;\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        for (var i = 0; i < constraints.length; i++) {\n            Constraint.solve(constraints[i], timeScale);\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            constraint.pointA = Vector.rotate(pointA, bodyA.angle - constraint.angleA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            constraint.pointB = Vector.rotate(pointB, bodyB.angle - constraint.angleB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength === 0)\n            currentLength = _minLength;\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            normal = Vector.div(delta, currentLength),\n            force = Vector.mult(delta, difference * 0.5 * constraint.stiffness * timeScale * timeScale);\n        \n        // if difference is very small, we can skip\n        if (Math.abs(1 - (currentLength / constraint.length)) < _minDifference * timeScale)\n            return;\n\n        var velocityPointA,\n            velocityPointB,\n            offsetA,\n            offsetB,\n            oAn,\n            oBn,\n            bodyADenom,\n            bodyBDenom;\n    \n        if (bodyA && !bodyA.isStatic) {\n            // point body offset\n            offsetA = { \n                x: pointAWorld.x - bodyA.position.x + force.x, \n                y: pointAWorld.y - bodyA.position.y + force.y\n            };\n            \n            // update velocity\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            \n            // find point velocity and body mass\n            velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity));\n            oAn = Vector.dot(offsetA, normal);\n            bodyADenom = bodyA.inverseMass + bodyA.inverseInertia * oAn * oAn;\n        } else {\n            velocityPointA = { x: 0, y: 0 };\n            bodyADenom = bodyA ? bodyA.inverseMass : 0;\n        }\n            \n        if (bodyB && !bodyB.isStatic) {\n            // point body offset\n            offsetB = { \n                x: pointBWorld.x - bodyB.position.x - force.x, \n                y: pointBWorld.y - bodyB.position.y - force.y \n            };\n            \n            // update velocity\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // find point velocity and body mass\n            velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity));\n            oBn = Vector.dot(offsetB, normal);\n            bodyBDenom = bodyB.inverseMass + bodyB.inverseInertia * oBn * oBn;\n        } else {\n            velocityPointB = { x: 0, y: 0 };\n            bodyBDenom = bodyB ? bodyB.inverseMass : 0;\n        }\n        \n        var relativeVelocity = Vector.sub(velocityPointB, velocityPointA),\n            normalImpulse = Vector.dot(normal, relativeVelocity) / (bodyADenom + bodyBDenom);\n    \n        if (normalImpulse > 0) normalImpulse = 0;\n    \n        var normalVelocity = {\n            x: normal.x * normalImpulse, \n            y: normal.y * normalImpulse\n        };\n\n        var torque;\n \n        if (bodyA && !bodyA.isStatic) {\n            torque = Vector.cross(offsetA, normalVelocity) * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x;\n            bodyA.constraintImpulse.y -= force.y;\n            bodyA.constraintImpulse.angle += torque;\n\n            // apply forces\n            bodyA.position.x -= force.x;\n            bodyA.position.y -= force.y;\n            bodyA.angle += torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            torque = Vector.cross(offsetB, normalVelocity) * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x;\n            bodyB.constraintImpulse.y += force.y;\n            bodyB.constraintImpulse.angle -= torque;\n            \n            // apply forces\n            bodyB.position.x += force.x;\n            bodyB.position.y += force.y;\n            bodyB.angle -= torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            impulse.angle = 0;\n            impulse.x = 0;\n            impulse.y = 0;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/constraint/Constraint.js","/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = require('./Pair');\nvar Common = require('../core/Common');\n\n(function() {\n    \n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Pairs.js","/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = require('../geometry/Vector');\nvar SAT = require('./SAT');\nvar Bounds = require('../geometry/Bounds');\nvar Bodies = require('../factory/Bodies');\nvar Vertices = require('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Query.js","/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = require('../geometry/Vertices');\nvar Common = require('../core/Common');\nvar Body = require('../body/Body');\nvar Bounds = require('../geometry/Bounds');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!window.decomp) {\n            Common.log('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.', 'warn');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !window.decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = new decomp.Polygon();\n                for (i = 0; i < vertices.length; i++) {\n                    concave.vertices.push([vertices[i].x, vertices[i].y]);\n                }\n\n                // vertices are concave and simple, we can decompose into parts\n                concave.makeCCW();\n                if (removeCollinear !== false)\n                    concave.removeCollinearPoints(removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = concave.quickDecomp();\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i],\n                        chunkVertices = [];\n\n                    // convert vertices into the correct structure\n                    for (j = 0; j < chunk.vertices.length; j++) {\n                        chunkVertices.push({ x: chunk.vertices[j][0], y: chunk.vertices[j][1] });\n                    }\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/factory/Bodies.js","/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor || pair.separation < 0)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/collision/Resolver.js","/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = require('../geometry/Vertices');\nvar Sleeping = require('../core/Sleeping');\nvar Mouse = require('../core/Mouse');\nvar Events = require('../core/Events');\nvar Detector = require('../collision/Detector');\nvar Constraint = require('./Constraint');\nvar Composite = require('../body/Composite');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.log('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected', 'warn');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'tick', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/constraint/MouseConstraint.js","/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / element.width * pixelRatio),\n            y: y / (element.clientHeight / element.height * pixelRatio)\n        };\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Mouse.js","/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = require('../body/World');\nvar Sleeping = require('./Sleeping');\nvar Resolver = require('../collision/Resolver');\nvar Render = require('../render/Render');\nvar Pairs = require('../collision/Pairs');\nvar Metrics = require('./Metrics');\nvar Grid = require('../collision/Grid');\nvar Events = require('./Events');\nvar Composite = require('../body/Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('./Common');\nvar Body = require('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.log('Engine.create: engine.render is deprecated (see docs)', 'warn');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n        // @if DEBUG\n        engine.metrics = Metrics.create(engine.metrics);\n        // @endif\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // @if DEBUG\n        // reset metrics logging\n        Metrics.reset(engine.metrics);\n        // @endif\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // @if DEBUG\n        // update metrics log\n        Metrics.update(engine.metrics, engine);\n        // @endif\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Engine.js","// @if DEBUG\n/**\n* _Internal Class_, not generally used outside of the engine's internals.\n*\n*/\n\nvar Metrics = {};\n\nmodule.exports = Metrics;\n\nvar Composite = require('../body/Composite');\nvar Common = require('./Common');\n\n(function() {\n\n    /**\n     * Creates a new metrics.\n     * @method create\n     * @private\n     * @return {metrics} A new metrics\n     */\n    Metrics.create = function(options) {\n        var defaults = {\n            extended: false,\n            narrowDetections: 0,\n            narrowphaseTests: 0,\n            narrowReuse: 0,\n            narrowReuseCount: 0,\n            midphaseTests: 0,\n            broadphaseTests: 0,\n            narrowEff: 0.0001,\n            midEff: 0.0001,\n            broadEff: 0.0001,\n            collisions: 0,\n            buckets: 0,\n            bodies: 0,\n            pairs: 0\n        };\n\n        return Common.extend(defaults, false, options);\n    };\n\n    /**\n     * Resets metrics.\n     * @method reset\n     * @private\n     * @param {metrics} metrics\n     */\n    Metrics.reset = function(metrics) {\n        if (metrics.extended) {\n            metrics.narrowDetections = 0;\n            metrics.narrowphaseTests = 0;\n            metrics.narrowReuse = 0;\n            metrics.narrowReuseCount = 0;\n            metrics.midphaseTests = 0;\n            metrics.broadphaseTests = 0;\n            metrics.narrowEff = 0;\n            metrics.midEff = 0;\n            metrics.broadEff = 0;\n            metrics.collisions = 0;\n            metrics.buckets = 0;\n            metrics.pairs = 0;\n            metrics.bodies = 0;\n        }\n    };\n\n    /**\n     * Updates metrics.\n     * @method update\n     * @private\n     * @param {metrics} metrics\n     * @param {engine} engine\n     */\n    Metrics.update = function(metrics, engine) {\n        if (metrics.extended) {\n            var world = engine.world,\n                bodies = Composite.allBodies(world);\n\n            metrics.collisions = metrics.narrowDetections;\n            metrics.pairs = engine.pairs.list.length;\n            metrics.bodies = bodies.length;\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\n            metrics.broadEff = (1 - (metrics.broadphaseTests / (bodies.length || 1))).toFixed(2);\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2);\n            //var broadphase = engine.broadphase[engine.broadphase.current];\n            //if (broadphase.instance)\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\n        }\n    };\n\n})();\n// @endif\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Metrics.js","/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = require('./Events');\nvar Engine = require('./Engine');\nvar Common = require('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render);\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/core/Runner.js","/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = require('../body/Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('../core/Common');\nvar Body = require('../body/Body');\nvar Bodies = require('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = -20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.trapezoid(xx, yy, width, height, 0.3, { \n                collisionFilter: {\n                    group: group\n                },\n                friction: 0.01,\n                chamfer: {\n                    radius: 10\n                }\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n                    \n        var axelA = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelAOffset, y: wheelYOffset },\n            bodyB: wheelA,\n            stiffness: 0.2\n        });\n                        \n        var axelB = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelBOffset, y: wheelYOffset },\n            bodyB: wheelB,\n            stiffness: 0.2\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.4 }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/factory/Composites.js","/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/geometry/Svg.js","/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Composite = require('../body/Composite');\nvar Common = require('../core/Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.log('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)', 'warn');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('No \"render.element\" passed, \"render.canvas\" was not inserted into document.', 'warn');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/~/matter-js/src/render/RenderPixi.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _gameLoop = require('../utils/game-loop');\n\nvar _gameLoop2 = _interopRequireDefault(_gameLoop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Loop = (_temp = _class = function (_Component) {\n  _inherits(Loop, _Component);\n\n  function Loop(props) {\n    _classCallCheck(this, Loop);\n\n    var _this = _possibleConstructorReturn(this, (Loop.__proto__ || Object.getPrototypeOf(Loop)).call(this, props));\n\n    _this.loop = new _gameLoop2.default();\n    return _this;\n  }\n\n  _createClass(Loop, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loop.start();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.loop.stop();\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        loop: this.loop\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var defaultStyles = {\n        height: '100%',\n        width: '100%'\n      };\n      var styles = _extends({}, defaultStyles, this.props.style);\n      return _react2.default.createElement(\n        'div',\n        { style: styles },\n        this.props.children\n      );\n    }\n  }]);\n\n  return Loop;\n}(_react.Component), _class.propTypes = {\n  children: _react.PropTypes.any,\n  style: _react.PropTypes.object\n}, _class.childContextTypes = {\n  loop: _react.PropTypes.object\n}, _temp);\nexports.default = Loop;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Loop, 'Loop', 'src/components/loop.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/loop.js","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GameLoop = function () {\n  function GameLoop() {\n    var _this = this;\n\n    _classCallCheck(this, GameLoop);\n\n    this.loop = function () {\n      _this.subscribers.forEach(function (callback) {\n        callback.call();\n      });\n\n      _this.loopID = window.requestAnimationFrame(_this.loop);\n    };\n\n    this.subscribers = [];\n    this.loopID = null;\n  }\n\n  _createClass(GameLoop, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.loopID) {\n        this.loop();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      window.cancelAnimationFrame(this.loopID);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(callback) {\n      return this.subscribers.push(callback);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(id) {\n      this.subscribers.splice(id - 1, 1);\n    }\n  }]);\n\n  return GameLoop;\n}();\n\nexports.default = GameLoop;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(GameLoop, \"GameLoop\", \"src/utils/game-loop.js\");\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/utils/game-loop.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KeyListener = function KeyListener() {\n  var _this = this;\n\n  _classCallCheck(this, KeyListener);\n\n  this.LEFT = 37;\n  this.RIGHT = 39;\n  this.UP = 38;\n  this.DOWN = 40;\n  this.SPACE = 32;\n\n  this.down = function (event) {\n    if (event.keyCode in _this.keys) {\n      event.preventDefault();\n      _this.keys[event.keyCode] = true;\n    }\n  };\n\n  this.up = function (event) {\n    if (event.keyCode in _this.keys) {\n      event.preventDefault();\n      _this.keys[event.keyCode] = false;\n    }\n  };\n\n  this.isDown = function (keyCode) {\n    return _this.keys[keyCode] || false;\n  };\n\n  this.subscribe = function (keys) {\n    window.addEventListener('keydown', _this.down);\n    window.addEventListener('keyup', _this.up);\n\n    keys.forEach(function (key) {\n      _this.keys[key] = false;\n    });\n  };\n\n  this.unsubscribe = function () {\n    window.removeEventListener('keydown', _this.down);\n    window.removeEventListener('keyup', _this.up);\n    _this.keys = {};\n  };\n\n  this.keys = {};\n};\n\nexports.default = KeyListener;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(KeyListener, 'KeyListener', 'src/utils/key-listener.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/utils/key-listener.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Sprite = (_temp = _class = function (_Component) {\n  _inherits(Sprite, _Component);\n\n  function Sprite(props) {\n    _classCallCheck(this, Sprite);\n\n    var _this = _possibleConstructorReturn(this, (Sprite.__proto__ || Object.getPrototypeOf(Sprite)).call(this, props));\n\n    _this.loopID = null;\n    _this.tickCount = 0;\n    _this.finished = false;\n\n    _this.state = {\n      currentStep: 0\n    };\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.onPlayStateChanged(1);\n      var animate = this.animate.bind(this, this.props);\n      this.loopID = this.context.loop.subscribe(animate);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.state !== this.props.state) {\n        this.finished = false;\n        this.props.onPlayStateChanged(1);\n        this.context.loop.unsubscribe(this.loopID);\n        this.tickCount = 0;\n\n        this.setState({\n          currentStep: 0\n        }, function () {\n          var animate = _this2.animate.bind(_this2, nextProps);\n          _this2.loopID = _this2.context.loop.subscribe(animate);\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.context.loop.unsubscribe(this.loopID);\n    }\n  }, {\n    key: 'animate',\n    value: function animate(props) {\n      var repeat = props.repeat;\n      var ticksPerFrame = props.ticksPerFrame;\n      var state = props.state;\n      var steps = props.steps;\n\n\n      if (this.tickCount === ticksPerFrame && !this.finished) {\n        if (steps[state] !== 0) {\n          var currentStep = this.state.currentStep;\n\n          var lastStep = steps[state];\n          var nextStep = currentStep === lastStep ? 0 : currentStep + 1;\n\n          this.setState({\n            currentStep: nextStep\n          });\n\n          if (currentStep === lastStep && repeat === false) {\n            this.finished = true;\n            this.props.onPlayStateChanged(0);\n          }\n        }\n\n        this.tickCount = 0;\n      } else {\n        this.tickCount++;\n      }\n    }\n  }, {\n    key: 'getImageStyles',\n    value: function getImageStyles() {\n      var currentStep = this.state.currentStep;\n      var _props = this.props;\n      var state = _props.state;\n      var tileWidth = _props.tileWidth;\n      var tileHeight = _props.tileHeight;\n\n\n      var left = this.props.offset[0] + currentStep * tileWidth;\n      var top = this.props.offset[1] + state * tileHeight;\n\n      return {\n        position: 'absolute',\n        transform: 'translate(-' + left + 'px, -' + top + 'px)'\n      };\n    }\n  }, {\n    key: 'getWrapperStyles',\n    value: function getWrapperStyles() {\n      return {\n        height: this.props.tileHeight,\n        width: this.props.tileWidth,\n        overflow: 'hidden',\n        position: 'relative',\n        transform: 'scale(' + (this.props.scale || this.context.scale) + ')',\n        transformOrigin: 'top left',\n        imageRendering: 'pixelated'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { style: _extends({}, this.getWrapperStyles(), this.props.style) },\n        _react2.default.createElement('img', {\n          style: this.getImageStyles(),\n          src: this.props.src\n        })\n      );\n    }\n  }]);\n\n  return Sprite;\n}(_react.Component), _class.propTypes = {\n  offset: _react.PropTypes.array,\n  onPlayStateChanged: _react.PropTypes.func,\n  repeat: _react.PropTypes.bool,\n  scale: _react.PropTypes.number,\n  src: _react.PropTypes.string,\n  state: _react.PropTypes.number,\n  steps: _react.PropTypes.array,\n  style: _react.PropTypes.object,\n  ticksPerFrame: _react.PropTypes.number,\n  tileHeight: _react.PropTypes.number,\n  tileWidth: _react.PropTypes.number\n}, _class.defaultProps = {\n  offset: [0, 0],\n  onPlayStateChanged: function onPlayStateChanged() {},\n  repeat: true,\n  src: '',\n  state: 0,\n  steps: [],\n  ticksPerFrame: 4,\n  tileHeight: 64,\n  tileWidth: 64\n}, _class.contextTypes = {\n  loop: _react.PropTypes.object,\n  scale: _react.PropTypes.number\n}, _temp);\nexports.default = Sprite;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Sprite, 'Sprite', 'src/components/sprite.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/sprite.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Stage = (_temp = _class = function (_Component) {\n  _inherits(Stage, _Component);\n\n  function Stage(props) {\n    _classCallCheck(this, Stage);\n\n    var _this = _possibleConstructorReturn(this, (Stage.__proto__ || Object.getPrototypeOf(Stage)).call(this, props));\n\n    _this.setDimensions = function () {\n      _this.setState({\n        dimensions: [_this.container.offsetWidth, _this.container.offsetHeight]\n      });\n    };\n\n    _this.container = null;\n\n    _this.state = {\n      dimensions: [0, 0]\n    };\n    return _this;\n  }\n\n  _createClass(Stage, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.setDimensions);\n      this.setDimensions();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.setDimensions);\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        scale: this.getScale().scale,\n        loop: this.context.loop\n      };\n    }\n  }, {\n    key: 'getScale',\n    value: function getScale() {\n      var _state$dimensions = _slicedToArray(this.state.dimensions, 2);\n\n      var vwidth = _state$dimensions[0];\n      var vheight = _state$dimensions[1];\n      var _props = this.props;\n      var height = _props.height;\n      var width = _props.width;\n\n\n      var targetWidth = void 0;\n      var targetHeight = void 0;\n      var targetScale = void 0;\n\n      if (height / width > vheight / vwidth) {\n        targetHeight = vheight;\n        targetWidth = targetHeight * width / height;\n        targetScale = vheight / height;\n      } else {\n        targetWidth = vwidth;\n        targetHeight = targetWidth * height / width;\n        targetScale = vwidth / width;\n      }\n\n      if (!this.container) {\n        return {\n          height: height,\n          width: width,\n          scale: 1\n        };\n      } else {\n        return {\n          height: targetHeight,\n          width: targetWidth,\n          scale: targetScale\n        };\n      }\n    }\n  }, {\n    key: 'getWrapperStyles',\n    value: function getWrapperStyles() {\n      return {\n        height: '100%',\n        width: '100%',\n        position: 'relative'\n      };\n    }\n  }, {\n    key: 'getInnerStyles',\n    value: function getInnerStyles() {\n      var scale = this.getScale();\n      var xOffset = Math.floor((this.state.dimensions[0] - scale.width) / 2);\n      var yOffset = Math.floor((this.state.dimensions[1] - scale.height) / 2);\n\n      return {\n        height: Math.floor(scale.height),\n        width: Math.floor(scale.width),\n        position: 'absolute',\n        overflow: 'hidden',\n        transform: 'translate(' + xOffset + 'px, ' + yOffset + 'px)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(\n        'div',\n        { style: this.getWrapperStyles(), ref: function ref(c) {\n            _this2.container = c;\n          } },\n        _react2.default.createElement(\n          'div',\n          { style: _extends({}, this.getInnerStyles(), this.props.style) },\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return Stage;\n}(_react.Component), _class.propTypes = {\n  children: _react.PropTypes.any,\n  height: _react.PropTypes.number,\n  style: _react.PropTypes.object,\n  width: _react.PropTypes.number\n}, _class.defaultProps = {\n  width: 1024,\n  height: 576\n}, _class.contextTypes = {\n  loop: _react.PropTypes.object\n}, _class.childContextTypes = {\n  loop: _react.PropTypes.object,\n  scale: _react.PropTypes.number\n}, _temp);\nexports.default = Stage;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Stage, 'Stage', 'src/components/stage.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/stage.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TileMap = (_temp = _class = function (_Component) {\n  _inherits(TileMap, _Component);\n\n  function TileMap() {\n    _classCallCheck(this, TileMap);\n\n    return _possibleConstructorReturn(this, (TileMap.__proto__ || Object.getPrototypeOf(TileMap)).apply(this, arguments));\n  }\n\n  _createClass(TileMap, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return this.context.scale !== nextContext.scale;\n    }\n  }, {\n    key: 'generateMap',\n    value: function generateMap() {\n      var _this2 = this;\n\n      var _props = this.props;\n      var columns = _props.columns;\n      var layers = _props.layers;\n      var rows = _props.rows;\n\n\n      var mappedLayers = [];\n\n      layers.forEach(function (l, index) {\n        var layer = [];\n        for (var r = 0; r < rows; r++) {\n          for (var c = 0; c < columns; c++) {\n            var gridIndex = r * columns + c;\n            if (l[gridIndex] !== 0) {\n              layer.push(_react2.default.createElement(\n                'div',\n                {\n                  key: 'tile-' + index + '-' + r + '-' + c,\n                  style: _this2.getImageWrapperStyles(r, c)\n                },\n                _this2.props.renderTile(_this2.getTileData(r, c, l[gridIndex]), _this2.props.src, _this2.getImageStyles(l[gridIndex]))\n              ));\n            }\n          }\n        }\n        mappedLayers.push(layer);\n      });\n\n      return mappedLayers;\n    }\n  }, {\n    key: 'getTileData',\n    value: function getTileData(row, column, index) {\n      var tileSize = this.props.tileSize;\n\n\n      var size = tileSize;\n      var left = column * size;\n      var top = row * size;\n\n      return {\n        index: index,\n        size: tileSize,\n        left: left,\n        top: top\n      };\n    }\n  }, {\n    key: 'getImageStyles',\n    value: function getImageStyles(imageIndex) {\n      var scale = this.context.scale;\n      var tileSize = this.props.tileSize;\n\n\n      var size = Math.round(scale * tileSize);\n      var left = (imageIndex - 1) * size;\n\n      return {\n        position: 'absolute',\n        imageRendering: 'pixelated',\n        display: 'block',\n        height: '100%',\n        transform: 'translate(-' + left + 'px, 0px)'\n      };\n    }\n  }, {\n    key: 'getImageWrapperStyles',\n    value: function getImageWrapperStyles(row, column) {\n      var scale = this.context.scale;\n      var tileSize = this.props.tileSize;\n\n\n      var size = Math.round(scale * tileSize);\n      var left = column * size;\n      var top = row * size;\n\n      return {\n        height: size,\n        width: size,\n        overflow: 'hidden',\n        position: 'absolute',\n        transform: 'translate(' + left + 'px, ' + top + 'px)'\n      };\n    }\n  }, {\n    key: 'getLayerStyles',\n    value: function getLayerStyles() {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      };\n    }\n  }, {\n    key: 'getWrapperStyles',\n    value: function getWrapperStyles() {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var layers = this.generateMap();\n      return _react2.default.createElement(\n        'div',\n        { style: _extends({}, this.getWrapperStyles(), this.props.style) },\n        layers.map(function (layer, index) {\n          return _react2.default.createElement(\n            'div',\n            { key: 'layer-' + index, style: _this3.getLayerStyles() },\n            layer\n          );\n        })\n      );\n    }\n  }]);\n\n  return TileMap;\n}(_react.Component), _class.propTypes = {\n  columns: _react.PropTypes.number,\n  layers: _react.PropTypes.array,\n  renderTile: _react.PropTypes.func,\n  rows: _react.PropTypes.number,\n  scale: _react.PropTypes.number,\n  src: _react.PropTypes.string,\n  style: _react.PropTypes.object,\n  tileSize: _react.PropTypes.number\n}, _class.defaultProps = {\n  columns: 16,\n  layers: [],\n  renderTile: function renderTile(tile, src, styles) {\n    return _react2.default.createElement('img', {\n      style: styles,\n      src: src\n    });\n  },\n  rows: 9,\n  src: '',\n  tileSize: 64\n}, _class.contextTypes = {\n  scale: _react.PropTypes.number\n}, _temp);\nexports.default = TileMap;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(TileMap, 'TileMap', 'src/components/tile-map.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/tile-map.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _matterJs = require('matter-js');\n\nvar _matterJs2 = _interopRequireDefault(_matterJs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar World = (_temp = _class = function (_Component) {\n  _inherits(World, _Component);\n\n  function World(props) {\n    _classCallCheck(this, World);\n\n    var _this = _possibleConstructorReturn(this, (World.__proto__ || Object.getPrototypeOf(World)).call(this, props));\n\n    _this.loop = function () {\n      var currTime = 0.001 * Date.now();\n      _matterJs.Engine.update(_this.engine, 1000 / 60, _this.lastTime ? currTime / _this.lastTime : 1);\n      _this.lastTime = currTime;\n    };\n\n    _this.loopID = null;\n    _this.lastTime = null;\n\n    var world = _matterJs2.default.World.create({ gravity: props.gravity });\n\n    _this.engine = _matterJs.Engine.create({\n      world: world\n    });\n    return _this;\n  }\n\n  _createClass(World, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var gravity = nextProps.gravity;\n\n\n      if (gravity !== this.props.gravity) {\n        this.engine.world.gravity = gravity;\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loopID = this.context.loop.subscribe(this.loop);\n      this.props.onInit(this.engine);\n      _matterJs.Events.on(this.engine, 'afterUpdate', this.props.onUpdate);\n      _matterJs.Events.on(this.engine, 'collisionStart', this.props.onCollision);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.context.loop.unsubscribe(this.loopID);\n      _matterJs.Events.off(this.engine, 'afterUpdate', this.props.onUpdate);\n      _matterJs.Events.off(this.engine, 'collisionStart', this.props.onCollision);\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        engine: this.engine\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var defaultStyles = {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%'\n      };\n\n      return _react2.default.createElement(\n        'div',\n        { style: defaultStyles },\n        this.props.children\n      );\n    }\n  }]);\n\n  return World;\n}(_react.Component), _class.propTypes = {\n  children: _react.PropTypes.any,\n  gravity: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number,\n    scale: _react.PropTypes.number\n  }),\n  onCollision: _react.PropTypes.func,\n  onInit: _react.PropTypes.func,\n  onUpdate: _react.PropTypes.func\n}, _class.defaultProps = {\n  gravity: {\n    x: 0,\n    y: 1,\n    scale: 0.001\n  },\n  onCollision: function onCollision() {},\n  onInit: function onInit() {},\n  onUpdate: function onUpdate() {}\n}, _class.contextTypes = {\n  scale: _react.PropTypes.number,\n  loop: _react.PropTypes.object\n}, _class.childContextTypes = {\n  engine: _react.PropTypes.object\n}, _temp);\nexports.default = World;\n;\n\n(function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(World, 'World', 'src/components/world.js');\n})();\n\n;\n\n\n// WEBPACK FOOTER //\n// ./~/react-game-kit/lib/components/world.js","import { Sprite } from 'react-game-kit';\r\nimport React, { Component, PropTypes } from 'react';\r\n\r\n/**\r\n * @class App\r\n *\r\n * @description\r\n * This is the main entry to the react app, sets up event\r\n * listeners and other things that are needed for the\r\n * rest of the game\r\n *\r\n */\r\nexport default class Game extends Component {\r\n\r\n\tstatic contextTypes = {\r\n\t\tloop: PropTypes.object,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tkeys: PropTypes.object\r\n\t};\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param props\r\n\t */\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tfacing: 0\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Lifecycle Method\r\n\t * Sets up event listeners when the component is mounted to the DOM\r\n\t *\r\n\t */\r\n\tcomponentDidMount () {\r\n\t\tthis.context.loop.subscribe(this.update);\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Lifecycle Method\r\n\t * removes event listeners when the component is gone\r\n\t *\r\n\t */\r\n\tcomponentWillUnmount() {\r\n\t\tthis.context.loop.unsubscribe(this.update);\r\n\t}\r\n\r\n\t/**\r\n\t * @description\r\n\t * React Render Method\r\n\t *\r\n\t * @returns {XML}\r\n\t */\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Sprite repeat={true}\r\n\t\t\t\t\tscale={0.4}\r\n\t\t\t\t\toffset={[0, 10]}\r\n\t\t\t\t\tstate={this.state.facing}\r\n\t\t\t\t\tsteps={[3, 3, 3, 3]}\r\n\t\t\t\t\ttileHeight={2400/4}\r\n\t\t\t\t\ttileWidth={1841/4}\r\n\t\t\t\t\tsrc=\"./sprites/test2.png\" />\r\n\t\t);\r\n\t}\r\n\r\n\tupdate = () => {\r\n\t\tthis.checkKeys();\r\n\t};\r\n\r\n\tcheckKeys = () => {\r\n\t\tconst { keys } = this.props;\r\n\r\n\t\tif (keys.isDown(keys.SPACE)) {\r\n\t\t\tthis.setState({facing: 0})\r\n\t\t}\r\n\t\tif (keys.isDown(keys.LEFT)) {\r\n\t\t\tthis.setState({facing: 2})\r\n\t\t}\r\n\t\tif (keys.isDown(keys.RIGHT)) {\r\n\t\t\tthis.setState({facing: 1})\r\n\t\t}\r\n\t\tif (keys.isDown(keys.UP)) {\r\n\t\t\tthis.setState({facing: 3})\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/index.js"],"sourceRoot":""}